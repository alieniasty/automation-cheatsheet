variables:
  ALLOWED_FOLDERS: "cluster/dev cluster/stg"

.get_target_folders: &get_target_folders |
  if [ ! -z "$TARGET_FOLDER" ]; then
    echo "Using manually specified TARGET_FOLDER=$TARGET_FOLDER"
    TARGET_FOLDERS=($TARGET_FOLDER)
  else
    # Get the changed folder from git diff
    if [ "$CI_PIPELINE_SOURCE" = "merge_request_event" ]; then
      CHANGED_FILES=$(git diff --name-only $CI_MERGE_REQUEST_DIFF_BASE_SHA $CI_COMMIT_SHA | grep '\.tf$' || true)
    else
      CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD | grep '\.tf$' || true)
    fi
    # Extract unique directories containing changed .tf files
    CHANGED_DIRS=$(echo "$CHANGED_FILES" | xargs -I {} dirname {} 2>/dev/null | sort -u || true)
    # Get all changed directories that match allowed folders
    TARGET_FOLDERS=()
    for dir in $CHANGED_DIRS; do
      if [[ " $ALLOWED_FOLDERS " =~ " $dir " ]]; then
        TARGET_FOLDERS+=($dir)
        echo "Detected changes in folder: $dir"
      fi
    done
    
    if [ ${#TARGET_FOLDERS[@]} -eq 0 ]; then
      echo "ERROR: No changes detected in allowed folders: $ALLOWED_FOLDERS"
      echo "Either make changes in an allowed folder or manually specify TARGET_FOLDER"
      exit 1
    fi
    
    echo "Will process the following folders: ${TARGET_FOLDERS[*]}"
  fi

.validate_folder: &validate_folder |
  if [ ! -d "$folder" ]; then
    echo "ERROR: Directory $folder does not exist"
    exit 1
  fi

plan:
  stage: plan
  script:
    - *get_target_folders
    - |
      for folder in "${TARGET_FOLDERS[@]}"; do
        *validate_folder
        cd $folder
        echo "--------------------------------------------------------------------------------"
        echo " PLANNING $folder"
        echo "--------------------------------------------------------------------------------"
        terraform init
        terraform plan -out=tfplan
        cd $CI_PROJECT_DIR
      done
  artifacts:
    paths:
      - clusters/csp/*/tfplan
      - clusters/devops/*/tfplan
    expire_in: 1 week
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
